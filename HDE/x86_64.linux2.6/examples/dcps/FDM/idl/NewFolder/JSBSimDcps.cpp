//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: JSBSimDcps.cpp
//  Source: NewFolder/JSBSimDcps.idl
//  Generated: Wed Dec 12 08:16:00 2012
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "JSBSimDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < JSBSim::fdmdata, struct fdmdataSeq_uniq_>;
#endif

const char * JSBSim::fdmdataTypeSupportInterface::_local_id = "IDL:JSBSim/fdmdataTypeSupportInterface:1.0";

JSBSim::fdmdataTypeSupportInterface_ptr JSBSim::fdmdataTypeSupportInterface::_duplicate (JSBSim::fdmdataTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean JSBSim::fdmdataTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, JSBSim::fdmdataTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

JSBSim::fdmdataTypeSupportInterface_ptr JSBSim::fdmdataTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (JSBSim::fdmdataTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < JSBSim::fdmdataTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

JSBSim::fdmdataTypeSupportInterface_ptr JSBSim::fdmdataTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataTypeSupportInterface_ptr result;
   result = dynamic_cast < JSBSim::fdmdataTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * JSBSim::fdmdataDataWriter::_local_id = "IDL:JSBSim/fdmdataDataWriter:1.0";

JSBSim::fdmdataDataWriter_ptr JSBSim::fdmdataDataWriter::_duplicate (JSBSim::fdmdataDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean JSBSim::fdmdataDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, JSBSim::fdmdataDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

JSBSim::fdmdataDataWriter_ptr JSBSim::fdmdataDataWriter::_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataWriter_ptr result = NULL;
   if (p && p->_is_a (JSBSim::fdmdataDataWriter::_local_id))
   {
      result = dynamic_cast < JSBSim::fdmdataDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

JSBSim::fdmdataDataWriter_ptr JSBSim::fdmdataDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataWriter_ptr result;
   result = dynamic_cast < JSBSim::fdmdataDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * JSBSim::fdmdataDataReader::_local_id = "IDL:JSBSim/fdmdataDataReader:1.0";

JSBSim::fdmdataDataReader_ptr JSBSim::fdmdataDataReader::_duplicate (JSBSim::fdmdataDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean JSBSim::fdmdataDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, JSBSim::fdmdataDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

JSBSim::fdmdataDataReader_ptr JSBSim::fdmdataDataReader::_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataReader_ptr result = NULL;
   if (p && p->_is_a (JSBSim::fdmdataDataReader::_local_id))
   {
      result = dynamic_cast < JSBSim::fdmdataDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

JSBSim::fdmdataDataReader_ptr JSBSim::fdmdataDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataReader_ptr result;
   result = dynamic_cast < JSBSim::fdmdataDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * JSBSim::fdmdataDataReaderView::_local_id = "IDL:JSBSim/fdmdataDataReaderView:1.0";

JSBSim::fdmdataDataReaderView_ptr JSBSim::fdmdataDataReaderView::_duplicate (JSBSim::fdmdataDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean JSBSim::fdmdataDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, JSBSim::fdmdataDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

JSBSim::fdmdataDataReaderView_ptr JSBSim::fdmdataDataReaderView::_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataReaderView_ptr result = NULL;
   if (p && p->_is_a (JSBSim::fdmdataDataReaderView::_local_id))
   {
      result = dynamic_cast < JSBSim::fdmdataDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

JSBSim::fdmdataDataReaderView_ptr JSBSim::fdmdataDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   JSBSim::fdmdataDataReaderView_ptr result;
   result = dynamic_cast < JSBSim::fdmdataDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



